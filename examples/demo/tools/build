#!/usr/bin/env bash

function show_help {
  echo "Usage: $0 (gcc|clang) [--perf]"
  echo ""
  echo "Options:"
  echo "  --perf  Build with performance analysis enabled."
}

function main {
  if [[ $# -lt 1 ]] || [[ "$1" != "gcc" && "$1" != "clang" ]]; then
    show_help
    return 1
  fi
  local compiler="$1"

  local perf="OFF"
  if [[ $# -ge 2 ]]; then
    if [[ "$2" != "--perf" ]]; then
      show_help
      return 1
    fi
    perf="ON"
  fi

  local script_dir
  script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
  local repo_dir="${script_dir}/.."

  cd "${repo_dir}" || return 1
  local cc="clang"
  local cxx="clang++"
  if [[ "${compiler}" == "gcc" ]]; then
    cc="gcc"
    cxx="g++"
  fi
  cmake -S . -B build -DDEMO_PERF="${perf}" \
    -DCMAKE_C_COMPILER="$(which $cc)" \
    -DCMAKE_CXX_COMPILER="$(which $cxx)" \
    || return 1

  if [[ "${perf}" == "ON" ]]; then
    export PAPINST_WRAPPER_OPTS="-v" # Disable dry-run mode and enable verbose mode.
  fi
  cmake --build build -j 8
}

main "$@"
